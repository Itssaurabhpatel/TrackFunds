{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import Header from\"../components/Header\";import Cards from\"../components/Cards\";import AddIncomeModal from\"../components/Modals/addIncome\";import AddExpenseModal from\"../components/Modals/addExpense\";import{collection,deleteDoc,addDoc,query,getDocs}from\"firebase/firestore\";import{auth,db}from\"../firebase\";import{useAuthState}from\"react-firebase-hooks/auth\";import{toast}from\"react-toastify\";import TransactionTable from\"../components/TransactionTable\";import ChartComponent from\"../components/Charts\";import NoTransactions from\"../components/NoTransaction\";import CardComponent from\"../components/Cards\";import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";function Dashboard(){const[transactions,setTransactions]=useState([]);const[loading,setLoading]=useState(false);const[user]=useAuthState(auth);const[isExpenseModalVisible,setIsExpenseModalVisible]=useState(false);const[isIncomeModalVisible,setIsIncomeModalVisible]=useState(false);const[income,setIncome]=useState(0);const[expenses,setExpenses]=useState(0);const[currentBalance,setCurrentBalance]=useState(0);const[sortKey,setSortKey]=useState(0);const showExpenseModal=()=>setIsExpenseModalVisible(true);const showIncomeModal=()=>setIsIncomeModalVisible(true);const handleExpenseCancel=()=>setIsExpenseModalVisible(false);const handleIncomeCancel=()=>setIsIncomeModalVisible(false);const onFinish=async(values,type)=>{const newTransaction={type:type,date:values.date.format(\"YYYY-MM-DD\"),amount:parseFloat(values.amount),tag:values.tag,name:values.name};await addTransaction(newTransaction);};async function addTransaction(transaction){try{await addDoc(collection(db,`users/${user.uid}/transactions`),transaction);toast.success(\"Transaction Added!\");setTransactions(prev=>[...prev,transaction]);calculateBalance();}catch(e){console.error(\"Error adding document: \",e);toast.error(\"Couldn't add transaction\");}}useEffect(()=>{fetchTransactions();},[user]);useEffect(()=>{calculateBalance();},[transactions]);function calculateBalance(){let incomeTotal=0;let expenseTotal=0;transactions.forEach(transaction=>{if(transaction.type===\"income\"){incomeTotal+=transaction.amount;}else if(transaction.type===\"expense\"){expenseTotal+=transaction.amount;}});setIncome(incomeTotal);setExpenses(expenseTotal);setCurrentBalance(incomeTotal-expenseTotal);}async function fetchTransactions(){setLoading(true);if(user){const q=query(collection(db,`users/${user.uid}/transactions`));const querySnapshot=await getDocs(q);const transactionsArray=[];querySnapshot.forEach(doc=>{transactionsArray.push(doc.data());});setTransactions(transactionsArray);toast.success(\"Transactions Fetched!\");}else{setTransactions([]);}setLoading(false);}let sortedTransactions=[...transactions].sort((a,b)=>{if(sortKey===\"date\"){return new Date(a.date)-new Date(b.date);}return 0;});const resetBalance=async()=>{if(!user)return;const confirmReset=window.confirm(\"Are you sure you want to reset the balance?\");if(!confirmReset)return;try{const q=query(collection(db,`users/${user.uid}/transactions`));const querySnapshot=await getDocs(q);const deletePromises=querySnapshot.docs.map(doc=>deleteDoc(doc.ref));await Promise.all(deletePromises);setTransactions([]);setIncome(0);setExpenses(0);setCurrentBalance(0);toast.success(\"Balance reset successfully!\");}catch(error){console.error(\"Error resetting balance: \",error);toast.error(\"Could not reset balance.\");}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Header,{}),loading?/*#__PURE__*/_jsx(\"p\",{children:\"Loading...\"}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Cards,{income:income,expense:expenses,totalBalance:currentBalance,showExpenseModal:showExpenseModal,showIncomeModal:showIncomeModal,resetBalance:resetBalance}),transactions.length!=0?/*#__PURE__*/_jsx(ChartComponent,{sortedTransactions:sortedTransactions}):/*#__PURE__*/_jsx(NoTransactions,{}),/*#__PURE__*/_jsx(AddExpenseModal,{isExpenseModalVisible:isExpenseModalVisible,handleExpenseCancel:handleExpenseCancel,onFinish:onFinish}),/*#__PURE__*/_jsx(AddIncomeModal,{isIncomeModalVisible:isIncomeModalVisible,handleIncomeCancel:handleIncomeCancel,onFinish:onFinish}),/*#__PURE__*/_jsx(TransactionTable,{transactions:transactions,addTransaction:addTransaction,fetchTransactions:fetchTransactions})]})]});}export default Dashboard;","map":{"version":3,"names":["React","useEffect","useState","Header","Cards","AddIncomeModal","AddExpenseModal","collection","deleteDoc","addDoc","query","getDocs","auth","db","useAuthState","toast","TransactionTable","ChartComponent","NoTransactions","CardComponent","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Dashboard","transactions","setTransactions","loading","setLoading","user","isExpenseModalVisible","setIsExpenseModalVisible","isIncomeModalVisible","setIsIncomeModalVisible","income","setIncome","expenses","setExpenses","currentBalance","setCurrentBalance","sortKey","setSortKey","showExpenseModal","showIncomeModal","handleExpenseCancel","handleIncomeCancel","onFinish","values","type","newTransaction","date","format","amount","parseFloat","tag","name","addTransaction","transaction","uid","success","prev","calculateBalance","e","console","error","fetchTransactions","incomeTotal","expenseTotal","forEach","q","querySnapshot","transactionsArray","doc","push","data","sortedTransactions","sort","a","b","Date","resetBalance","confirmReset","window","confirm","deletePromises","docs","map","ref","Promise","all","children","expense","totalBalance","length"],"sources":["/workspaces/TrackFunds/src/pages/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Header from \"../components/Header\";\r\nimport Cards from \"../components/Cards\";\r\nimport AddIncomeModal from \"../components/Modals/addIncome\";\r\nimport AddExpenseModal from \"../components/Modals/addExpense\";\r\nimport { collection, deleteDoc, addDoc, query, getDocs } from \"firebase/firestore\";\r\nimport { auth, db } from \"../firebase\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport { toast } from \"react-toastify\";\r\nimport TransactionTable from \"../components/TransactionTable\";\r\nimport ChartComponent from \"../components/Charts\";\r\nimport NoTransactions from \"../components/NoTransaction\";\r\nimport CardComponent from \"../components/Cards\";\r\n\r\nfunction Dashboard() {\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [user] = useAuthState(auth);\r\n  const [isExpenseModalVisible, setIsExpenseModalVisible] = useState(false);\r\n  const [isIncomeModalVisible, setIsIncomeModalVisible] = useState(false);\r\n  const [income, setIncome] = useState(0);\r\n  const [expenses, setExpenses] = useState(0);\r\n  const [currentBalance, setCurrentBalance] = useState(0);\r\n  const [sortKey, setSortKey] = useState(0);\r\n\r\n  const showExpenseModal = () => setIsExpenseModalVisible(true);\r\n  const showIncomeModal = () => setIsIncomeModalVisible(true);\r\n  const handleExpenseCancel = () => setIsExpenseModalVisible(false);\r\n  const handleIncomeCancel = () => setIsIncomeModalVisible(false);\r\n\r\n  const onFinish = async (values, type) => {\r\n    const newTransaction = {\r\n      type: type,\r\n      date: values.date.format(\"YYYY-MM-DD\"),\r\n      amount: parseFloat(values.amount),\r\n      tag: values.tag,\r\n      name: values.name,\r\n    };\r\n    await addTransaction(newTransaction);\r\n  };\r\n\r\n  async function addTransaction(transaction) {\r\n    try {\r\n      await addDoc(collection(db, `users/${user.uid}/transactions`), transaction);\r\n      toast.success(\"Transaction Added!\");\r\n      setTransactions((prev) => [...prev, transaction]);\r\n      calculateBalance();\r\n    } catch (e) {\r\n      console.error(\"Error adding document: \", e);\r\n      toast.error(\"Couldn't add transaction\");\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchTransactions();\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    calculateBalance();\r\n  }, [transactions]);\r\n\r\n  function calculateBalance() {\r\n    let incomeTotal = 0;\r\n    let expenseTotal = 0;\r\n\r\n    transactions.forEach((transaction) => {\r\n      if (transaction.type === \"income\") {\r\n        incomeTotal += transaction.amount;\r\n      } else if (transaction.type === \"expense\") {\r\n        expenseTotal += transaction.amount;\r\n      }\r\n    });\r\n\r\n    setIncome(incomeTotal);\r\n    setExpenses(expenseTotal);\r\n    setCurrentBalance(incomeTotal - expenseTotal);\r\n  }\r\n\r\n  async function fetchTransactions() {\r\n    setLoading(true);\r\n\r\n    if (user) {\r\n      const q = query(collection(db, `users/${user.uid}/transactions`));\r\n      const querySnapshot = await getDocs(q);\r\n      const transactionsArray = [];\r\n\r\n      querySnapshot.forEach((doc) => {\r\n        transactionsArray.push(doc.data());\r\n      });\r\n      setTransactions(transactionsArray);\r\n      toast.success(\"Transactions Fetched!\");\r\n    } else {\r\n      setTransactions([]); \r\n    }\r\n    setLoading(false);\r\n  }\r\n\r\n  let sortedTransactions = [...transactions].sort((a, b) => {\r\n    if (sortKey === \"date\") {\r\n      return new Date(a.date) - new Date(b.date); \r\n    }\r\n    return 0; \r\n  });\r\n\r\n  const resetBalance = async () => {\r\n    if (!user) return;\r\n  \r\n    const confirmReset = window.confirm(\"Are you sure you want to reset the balance?\");\r\n    if (!confirmReset) return;\r\n  \r\n    try {\r\n      const q = query(collection(db, `users/${user.uid}/transactions`));\r\n      const querySnapshot = await getDocs(q);\r\n      \r\n      const deletePromises = querySnapshot.docs.map((doc) => deleteDoc(doc.ref));\r\n      await Promise.all(deletePromises); \r\n      setTransactions([]); \r\n      setIncome(0);\r\n      setExpenses(0);\r\n      setCurrentBalance(0);\r\n  \r\n      toast.success(\"Balance reset successfully!\");\r\n    } catch (error) {\r\n      console.error(\"Error resetting balance: \", error);\r\n      toast.error(\"Could not reset balance.\");\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      {loading ? (\r\n        <p>Loading...</p>\r\n      ) : (\r\n        <>\r\n          <Cards\r\n            income={income}\r\n            expense={expenses}\r\n            totalBalance={currentBalance}\r\n            showExpenseModal={showExpenseModal}\r\n            showIncomeModal={showIncomeModal}\r\n            resetBalance={resetBalance}\r\n          />\r\n          {transactions.length != 0 ? (\r\n            <ChartComponent sortedTransactions={sortedTransactions} />\r\n          ) : (\r\n            <NoTransactions/>\r\n          )}\r\n          <AddExpenseModal\r\n            isExpenseModalVisible={isExpenseModalVisible}\r\n            handleExpenseCancel={handleExpenseCancel}\r\n            onFinish={onFinish}\r\n          />\r\n          <AddIncomeModal\r\n            isIncomeModalVisible={isIncomeModalVisible}\r\n            handleIncomeCancel={handleIncomeCancel}\r\n            onFinish={onFinish}\r\n          />\r\n\r\n          <TransactionTable\r\n            transactions={transactions}\r\n            addTransaction={addTransaction}\r\n            fetchTransactions={fetchTransactions}\r\n          />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}